scriptencoding utf-8
" vim:set ts=8 sts=2 sw=2 tw=0: (この行に関しては:help modelineを参照)
"
" An example for a Japanese version gvimrc file.
" 日本語版のデフォルトGUI設定ファイル(gvimrc) - Vim 8.1
"
" Last Change: 26-Dec-2019.
" Maintainer:  MURAOKA Taro <koron.kaoriya@gmail.com>
"
" 解説:
" このファイルにはVimの起動時に必ず設定される、GUI関連の設定が書かれていま
" す。編集時の挙動に関する設定はvimrcに書かかれています。
"
" 個人用設定は_gvimrcというファイルを作成しそこで行ないます。_gvimrcはこの
" ファイルの後に読込まれるため、ここに書かれた内容を上書きして設定することが
" 出来ます。_gvimrcは$HOMEまたは$VIMに置いておく必要があります。$HOMEは$VIM
" よりも優先され、$HOMEでみつかった場合$VIMは読込まれません。
"
" 管理者向けに本設定ファイルを直接書き換えずに済ませることを目的として、サイ
" トローカルな設定を別ファイルで行なえるように配慮してあります。Vim起動時に
" サイトローカルな設定ファイル($VIM/gvimrc_local.vim)が存在するならば、本設
" 定ファイルの主要部分が読み込まれる前に自動的に読み込みます。
"
" 読み込み後、変数g:gvimrc_local_finishが非0の値に設定されていた場合には本設
" 定ファイルに書かれた内容は一切実行されません。デフォルト動作を全て差し替え
" たい場合に利用して下さい。
"
" 参考:
"   :help gvimrc
"   :echo $HOME
"   :echo $VIM
"   :version

"---------------------------------------------------------------------------
" サイトローカルな設定($VIM/gvimrc_local.vim)があれば読み込む。読み込んだ後
" に変数g:gvimrc_local_finishに非0な値が設定されていた場合には、それ以上の設
" 定ファイルの読込を中止する。
if 1 && filereadable($VIM . '/gvimrc_local.vim')
  source $VIM/gvimrc_local.vim
  if exists('g:gvimrc_local_finish') && g:gvimrc_local_finish != 0
    finish
  endif
endif

"---------------------------------------------------------------------------
" ユーザ優先設定($HOME/.gvimrc_first.vim)があれば読み込む。読み込んだ後に変
" 数g:gvimrc_first_finishに非0な値が設定されていた場合には、それ以上の設定
" ファイルの読込を中止する。
if 1 && exists('$HOME') && filereadable($HOME . '/.gvimrc_first.vim')
  unlet! g:gvimrc_first_finish
  source $HOME/.gvimrc_first.vim
  if exists('g:gvimrc_first_finish') && g:gvimrc_first_finish != 0
    finish
  endif
endif

"---------------------------------------------------------------------------
" Bram氏の提供する設定例をインクルード (別ファイル:vimrc_example.vim)。これ
" 以前にg:no_gvimrc_exampleに非0な値を設定しておけばインクルードしない。
if 1 && (!exists('g:no_gvimrc_example') || g:no_gvimrc_example == 0)
  source $VIMRUNTIME/gvimrc_example.vim
endif

"---------------------------------------------------------------------------
" カラー設定:
" colorscheme morning
colorscheme slate

" 端末モード関連の色設定
highlight Terminal guifg=lightgrey guibg=grey20

"---------------------------------------------------------------------------
" フォント設定:
"
if has('win32')
  " Windows用
  if &guifont == ''
    set guifont=MS_Gothic:h12:cSHIFTJIS
    "set guifont=MS_Mincho:h12:cSHIFTJIS
  endif
  " 行間隔の設定
  set linespace=1
  " 一部のUCS文字の幅を自動計測して決める
  if has('kaoriya')
    set ambiwidth=auto
  endif
elseif has('mac')
  if &guifont == ''
    set guifont=Osaka－等幅:h14
  endif
elseif has('xfontset')
  if &guifontset == ''
    " UNIX用 (xfontsetを使用)
    set guifontset=a14,r14,k14
  endif
endif

"---------------------------------------------------------------------------
" ウインドウに関する設定:
"
" ウインドウの幅
set columns=80
" ウインドウの高さ
set lines=25
" コマンドラインの高さ(GUI使用時)
set cmdheight=2

"---------------------------------------------------------------------------
" 日本語入力に関する設定:
"
if has('multi_byte_ime') || has('xim')
  " IME ON時のカーソルの色を設定(設定例:紫)
  highlight CursorIM guibg=Purple guifg=NONE
  " 挿入モード・検索モードでのデフォルトのIME状態設定
  " (8.0.1114 でデフォルトになったが念のため残してある)
  "set iminsert=0 imsearch=0
  " 挿入モードでのIME状態を記憶させない場合、次行のコメントを解除
  "inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>
endif

"---------------------------------------------------------------------------
" マウスに関する設定:
"
" 解説:
" mousefocusは幾つか問題(一例:ウィンドウを分割しているラインにカーソルがあっ
" ている時の挙動)があるのでデフォルトでは設定しない。Windowsではmousehide
" が、マウスカーソルをVimのタイトルバーに置き日本語を入力するとチラチラする
" という問題を引き起す。
"
" どのモードでもマウスを使えるようにする
set mouse=a
" マウスの移動でフォーカスを自動的に切替えない (mousefocus:切替る)
set nomousefocus
" 入力時にマウスポインタを隠す (nomousehide:隠さない)
set mousehide
" ビジュアル選択(D&D他)を自動的にクリップボードへ (:help guioptions_a)
"set guioptions+=a

"---------------------------------------------------------------------------
" メニューに関する設定:
"
" 解説:
" "M"オプションが指定されたときはメニュー("m")・ツールバー("T")供に登録され
" ないので、自動的にそれらの領域を削除するようにした。よって、デフォルトのそ
" れらを無視してユーザが独自の一式を登録した場合には、それらが表示されないと
" いう問題が生じ得る。しかしあまりにレアなケースであると考えられるので無視す
" る。
"
if &guioptions =~# 'M'
  let &guioptions = substitute(&guioptions, '[mT]', '', 'g')
endif

"---------------------------------------------------------------------------
" その他、見栄えに関する設定:
"
" 検索文字列をハイライトしない(_vimrcではなく_gvimrcで設定する必要がある)
"set nohlsearch

"---------------------------------------------------------------------------
" 印刷に関する設定:
"
" 注釈:
" 印刷はGUIでなくてもできるのでvimrcで設定したほうが良いかもしれない。この辺
" りはWindowsではかなり曖昧。一般的に印刷には明朝、と言われることがあるらし
" いのでデフォルトフォントは明朝にしておく。ゴシックを使いたい場合はコメント
" アウトしてあるprintfontを参考に。
"
" 参考:
"   :hardcopy
"   :help 'printfont'
"   :help printing
"
" 印刷用フォント
if has('printer')
  if has('win32')
    set printfont=MS_Mincho:h12:cSHIFTJIS
    "set printfont=MS_Gothic:h12:cSHIFTJIS
  endif
endif

" Copyright (C) 2009-2018 KaoriYa/MURAOKA Taro


"---------------------------------------------------------------------------
" # Custom Area
"---------------------------------------------------------------------------
" ## システム全体

" シェルをCygwinのbash(将来的にはWSLに置換)
" OpenVimが動かなくなるため、一旦戻す
" set shell=C:\\cygwin64\\bin\\bash

" 常にステータスラインを表示(最近はデフォルト2っぽいので指定不要だが、airline使うため明示的に定義しておく)
set laststatus=2

"---------------------------------------------------------------------------
" ## バックアップ関連

" *.swp ファイル[ファイル編集前の作業コピーでVimクラッシュ時の復旧時に使用]の出力先
set directory=C:\\temp\backup\vi

" *~ (チルダ)ファイル[ファイル変更後に保存されるファイル編集前のバックアップ]の出力先
set backupdir=C:\\temp\backup\vi

" *.un~ ファイル[Undoの情報が保存されたファイル]の出力先
set undodir=C:\temp\backup\vi

" .viminfo ファイル[編集、検索、履歴などの情報・設定が保存されたファイル]の出力先(ファイル名の指定も必要、\をエスケープする必要有[多分])
set viminfo+=nC:\\temp\\backup\\vi\\viminfo.txt

"---------------------------------------------------------------------------
" ## GUI関連

" ツールバーの非表示
set guioptions-=T

" 折りたたむ
" 他のモード(See. マスタリングVim P68)
"  manual:手動折りたたみ
"  expr:Vimの式利用
"  marker:特別なマークアップ、あまり利用しない
"  syntax:構文ベース
"  diff:差分モード
:set foldmethod=indent

" 折りたたんで際にN行見せる
:set foldcolumn=1


"---------------------------------------------------------------------------
" ## 文章内部の記述

" タブのシフトは4文字分
:set tabstop=4

" 読み込み時のシフトも4文字分
:set shiftwidth=4

" タブは半角文字で実施
:set expandtab

" ファイルタイプに基づいたインデントの有効化
filetype plugin indent on 

" シンタックスハイライトの有効化
syntax on


" 参考サイト："Vim 設定ガイド".Qiita@marrontan619
" <https://qiita.com/marrontan619/items/541a1374e1ac672977e6>


"---------------------------------------------------------------------------
" ## 文字コード関連

" Vim内部の文字コード
" :set encoding=utf-8

" ファイル書き込み時の文字コード
:set fileencoding=utf-8

" 読み込み時の文字コード
:set fileencodings=utf-8,cp932

"---------------------------------------------------------------------------
" ## クリップボード関連

" GUI版vimエディタで、この機能を有効にするなら、この設定を追加する。
:set guioptions+=a

" 無名レジスタに入るデータを、*レジスタにも入れる。
:set clipboard+=unnamed

"---------------------------------------------------------------------------
" ## quickrun

" quickrunでPrevimOpenを起動させる様に関連づけ(markdown, AsciiDoc)
let g:quickrun_config = {
    \ 'markdown': {
    \   'runner': 'shell',
    \   'outputter': 'null',
    \   'command': ':PrevimOpen',
    \   'exec': '%c',
    \ },
    \ 'asciidoc': {
    \   'runner': 'shell',
    \   'outputter': 'null',
    \   'command': ':PrevimOpen',
    \   'exec': '%c',
    \ },
    \ }

" QuickRun and view compile result quickly
nnoremap <silent> <F5> :QuickRun -type markdown<CR>
vnoremap <silent> <F5> :QuickRun -type markdown/visual<CR>

" 拡張子とファイルタイプの関連付け
autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
autocmd BufNewFile,BufRead *.{asciidoc,adoc,asc} set filetype=asciidoc

" プレビューする際のブラウザ指定
" 注意：Chromeを指定する場合は、Chromeを開いた状態で使わないとVimが編集できなくなる
let g:previm_open_cmd = 'C:\\Program\ Files\ (x86)\\Google\\Chrome\\Application\\chrome.exe'

"---------------------------------------------------------------------------
" ## ale 
" 参考サイト："オレ的vimプラグイン10選".Qiita
" <https://qiita.com/reireias/items/beaa3bb0e299ae934217>

" 保存時のみ実行する
let g:ale_lint_on_text_changed = 0

" 表示に関する設定
let g:ale_sign_error = ''
let g:ale_sign_warning = ''
let g:airline#extensions#ale#open_lnum_symbol = '('
let g:airline#extensions#ale#close_lnum_symbol = ')'
let g:ale_echo_msg_format = '[%linter%]%code: %%s'
highlight link ALEErrorSign Tag
highlight link ALEWarningSign StorageClass

" Ctrl + kで次の指摘へ、Ctrl + jで前の指摘へ移動
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
